service: offer-service

frameworkVersion: '2'

provider:
  name: aws
  apiGateway:
    apiKeys:
      - name: fideltest-key
        value: v3IPj3dPvT62rJYm3Ho7d2owPMxyYQ7x5kJNWcsH
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  environment:
    DEFAULT_UUID: "3693ac7e-3e2b-432c-8c60-2b786453ca9b"
    BRAND_TABLE: "brand-dev"
    LOCATION_TABLE: "location-dev"
    OFFER_TABLE: "offer-dev"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "*"

functions:
  # Brands (Create, Index, Show)
  createBrands:
    handler: api/brand.create
    memorySize: 128
    description: Create Brands
    events:
      - http:
          path: brand
          method: post
          private: true
  getAllBrands:
    handler: api/brand.index
    memorySize: 128
    description: Get all Brands
    events:
      - http:
          path: brand
          method: get
          private: true
  showBrand:
    handler: api/brand.show
    memorySize: 128
    description: Get Brand by id
    events:
      - http:
          path: brand/{brandId}
          method: get
          private: true

  # Offers (Create, Index, Show)
  createOffers:
    handler: api/offer.create
    memorySize: 128
    description: Create offers for Brands
    events:
      - http:
          path: offer
          method: post
          private: true
  getAllOffers:
    handler: api/offer.index
    memorySize: 128
    description: Get all Offers
    events:
      - http:
          path: offer
          method: get
          private: true
  showOffer:
    handler: api/offer.show
    memorySize: 128
    description: Get Offer by id
    events:
      - http:
          path: offer/{offerId}
          method: get
          private: true

  # Location (Create, Index, Show)
  createLocations:
    handler: api/location.create
    memorySize: 128
    description: Create Locations
    events:
      - http:
          path: location
          method: post
          private: true
  getAllLocations:
    handler: api/location.index
    memorySize: 128
    description: Get all Locations
    events:
      - http:
          path: location
          method: get
          private: true
  showLocation:
    handler: api/location.show
    memorySize: 128
    description: Get Location by id
    events:
      - http:
          path: location/{locationId}
          method: get
          private: true

  # Logical Endpoints - Part 2 and Bonus
  offersLocationAssigner:
    handler: api/offer.linkToLocation
    memorySize: 128
    description: Link location to a Offer
    events:
      - http:
          path: offer/{offerId}/link-location/{locationId}
          method: post
          private: true
  brandsOffersLocationAssigner:
    handler: api/offer.linkAllBrandsLocationToAnOffer
    memorySize: 128
    description: Link all locations from a Brand to an Offer
    events:
      - http:
          path: offer/{offerId}/link-all-brands-location/{brandId}
          method: post
          private: true

resources:
  Resources:
    OffersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.OFFER_TABLE}
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
          -
            AttributeName: "brandId"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        GlobalSecondaryIndexes:
          -
            IndexName: "brandIdIndex"
            KeySchema:
              -
                AttributeName: "brandId"
                KeyType: "HASH"
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    LocationsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.LOCATION_TABLE}
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
          -
            AttributeName: "brandId"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        GlobalSecondaryIndexes:
          -
            IndexName: "brandIdIndex"
            KeySchema:
              -
                AttributeName: "brandId"
                KeyType: "HASH"
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    BrandsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.BRAND_TABLE}
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
